apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: "io.ratpack.ratpack-java"

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:1.0.0',
                'com.github.jengelman.gradle.plugins:shadow:1.2.1'
    }
}

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException("Must be built with Java 8 or higher")
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile ratpack.dependency("guice")
    compile 'com.google.guava:guava:18.0'
    compile 'com.netflix.hystrix:hystrix-core:1.4.10'
    compile 'io.ratpack:ratpack-hystrix:1.2.0'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.glassfish.jersey.core:jersey-client:2.22.2'
    compile 'com.github.kristofa:brave-jersey2:3.5.0'
    compile 'com.github.kristofa:brave-spancollector-scribe:3.5.0'
    runtime 'ch.qos.logback:logback-classic:1.1.3'
    testCompile "junit:junit:4.11"
}


sourceCompatibility=1.8
targetCompatibility=1.8

mainClassName = "com.example.server.App"

run {
    /* Pass all the properties: */
    systemProperties System.getProperties()
}


jar {
    archiveName = "api-gateway.jar"
    from configurations.runtime.collect {
        zipTree(it)
    }

    manifest {
        attributes 'Main-Class':'com.example.server.App'
    }
}

idea {
    project {
        //use JDK 1.8 in idea
        jdkName "1.8"
        languageLevel "1.8"
    }
}
